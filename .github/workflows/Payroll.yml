name: Payroll Generation (Main)

on:
  workflow_dispatch:
    inputs:
      month:
        description: 'Month to generate payroll (optional)'
        required: false
        default: ''

jobs:
  payroll:
    runs-on: windows-latest

    # Add MySQL service
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Aravind@123
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    env:
      DB_URL: jdbc:mysql://127.0.0.1:3306/hrms_project
      DB_USER: root
      DB_PASSWORD: Aravind@123
      CI: true

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Wait for MySQL to be ready
        shell: powershell
        run: |
          $maxRetries = 12
          $retry = 0
          do {
              try {
                  mysql -h 127.0.0.1 -P 3306 -u $env:DB_USER -p$env:DB_PASSWORD -e "SELECT 1;"
                  Write-Host "MySQL is ready."
                  break
              } catch {
                  Write-Host "Waiting for MySQL..."
                  Start-Sleep -Seconds 5
                  $retry++
              }
          } while ($retry -lt $maxRetries)
          if ($retry -eq $maxRetries) { exit 1 }

      - name: Reset MySQL Database
        shell: powershell
        run: |
          Write-Host "Resetting MySQL database..."
          mysql -h 127.0.0.1 -P 3306 -u $env:DB_USER -p$env:DB_PASSWORD -e "DROP DATABASE IF EXISTS hrms_project; CREATE DATABASE hrms_project;"

      - name: Clean Project
        run: mvn clean

      - name: Build Project (skip tests in CI)
        run: mvn package -DskipTests

      - name: Run Payroll Job
        shell: powershell
        run: |
          $payrollMonth = '${{ github.event.inputs.month }}'
          if ([string]::IsNullOrEmpty($payrollMonth)) {
              $payrollMonth = (Get-Date).ToString('MM')
          }
          Write-Host "Generating payroll for month: $payrollMonth"
          java -cp target/hrms_project-1.0-SNAPSHOT-shaded.jar com.hrms.model.service.PayrollJobs $payrollMonth > payroll.log 2>&1

      - name: Upload payroll log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: payroll-log
          path: payroll.log
