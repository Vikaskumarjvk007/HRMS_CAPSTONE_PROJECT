name: Payroll CI (Java 21)

on:
  # Automatically run on the 1st of every month at midnight
  schedule:
    - cron: '0 0 1 * *'  # Runs at 00:00 on the 1st of every month

  # Optional manual trigger (workflow_dispatch)
  workflow_dispatch:
    inputs:
      month:
        description: "Month to generate payroll (optional)"
        required: false
        default: ""

concurrency:
  group: payroll-${{ github.ref }}
  cancel-in-progress: true

# Give the GITHUB_TOKEN write access
permissions:
  contents: write

jobs:
  payroll:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: Aravind@123
        ports:
          - 3306:3306
        options: >-
          --health-cmd "mysqladmin ping --silent"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3

    env:
      DB_URL: jdbc:mysql://127.0.0.1:3306/hrms_project
      DB_USER: root
      DB_PASSWORD: Aravind@123
      CI: true
      GIT_USER_NAME: github-actions
      GIT_USER_EMAIL: github-actions@github.com

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Verify schema file exists
        run: |
          echo "Current directory: $(pwd)"
          ls -R
          if [ ! -f GitActionsdb/schema.sql ]; then
            echo "ERROR: GitActionsdb/schema.sql not found!"
            exit 1
          fi

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Show Java & Maven versions
        run: |
          java -version
          mvn -v

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..12}; do
            if mysql -h 127.0.0.1 -P 3306 -u $DB_USER -p$DB_PASSWORD -e "SELECT 1;" &> /dev/null; then
              echo "MySQL is ready."
              break
            else
              echo "Waiting for MySQL..."
              sleep 5
            fi
          done

      - name: Reset MySQL Database
        run: |
          mysql -h 127.0.0.1 -P 3306 -u $DB_USER -p$DB_PASSWORD -e "DROP DATABASE IF EXISTS hrms_project; CREATE DATABASE hrms_project;"

      - name: Initialize database schema
        run: |
          mysql -h 127.0.0.1 -P 3306 -u $DB_USER -p$DB_PASSWORD hrms_project < GitActionsdb/schema.sql

      - name: Build application
        run: mvn clean package -DskipTests

      - name: Run Payroll Job (skip if already generated)
        run: |
          PAYROLL_MONTH=${{ github.event.inputs.month }}
          PAYROLL_MONTH=${PAYROLL_MONTH:-$(date +%m)}
          echo "Checking if payroll already exists for month: $PAYROLL_MONTH"

          if [ -f payroll.log ] && grep -q "Payroll already generated for $PAYROLL_MONTH" payroll.log; then
            echo "Payroll already generated for $PAYROLL_MONTH. Skipping job."
            exit 0
          fi

          echo "Generating payroll for month: $PAYROLL_MONTH"
          java -jar target/hrms_project-1.0-SNAPSHOT-shaded.jar $PAYROLL_MONTH > payroll.log 2>&1 || echo "Payroll job failed, see payroll.log"
          tail -n 20 payroll.log

      - name: Upload payroll log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: payroll-log
          path: payroll.log

      # âœ… Commit & push the log file back to the same branch
      - name: Commit payroll.log
        if: always()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: update payroll log (month=${{ github.event.inputs.month || 'auto' }})"
          file_pattern: "payroll.log"
          branch: ${{ github.ref_name }}
